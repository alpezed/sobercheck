{"version":3,"sources":["../../node_modules/vanilla-tilt/lib/vanilla-tilt.js","services/index.js","../../node_modules/headroom.js/dist/headroom.js","header/index.js","index.js"],"names":["$","Services","render","VanillaTilt","init","document","querySelectorAll","max","speed","perspective","jQuery","Header","navElement","querySelector","pageContent","topBar","resizeHeader","window","on","headerSize","length","css","outerHeight","headroom","Headroom","offset","tolerance","up","down","onUnpin","topBarHeight","onPin"],"mappings":"AAAA;AACA;AEDA,AFEA,AGDA,ACCA,AHDC;ACAD,AFEA;AEDA,AFEA,AIDA;AFAA,AFEA;AEDA,AFEA;AEDA,AFEA;AEDA,AFEA;AEDA,AFEA;AEDA,AFEA;AEDA,AFEA;AEDA,AFEA,AGTA,AFAC;ACQD,AFEA,AGTA,AFAA;ACQA,AFEA,AGTA,AFAA;ACQA,AFEA,AGTA,AFAC,CEAC,AFAC,UEASA,AFACA,CEAX,AFAC,EEAa,AFAC;ACQjB,AFEA,AGVgB,AFAC,MECVW,AFAIV,MEDK,EFAC;ACSjB,AFEA,AGTE,AFAO,sBEAO,EFAO;ACQvB,AFEA,AGVgB,AFAO;ACSvB,AFEA;AEDA,AFEA,AGXG,AFAU,WAAKC,MAAL;ACUb,AFEA,AGXG,AFAO,WEAFU,UAAL,GAAkBP,QAAQ,CAACQ,aAAT,CAAwB,sBAAxB,CAAlB;ADUH,AFEA,AGXG,WAAKC,WAAL,GAAmBT,QAAQ,CAACQ,aAAT,CAAwB,YAAxB,CAAnB;ADUH,AFEA,AGXG,AFNc,WEMTE,MAAL,GAAcV,QAAQ,CAACQ,aAAT,CAAwB,sBAAxB,CAAd;ADUH,AFEA,AGVG,AFRc,WEQTX,MAAL;ADSH,AFEA,AGVG,AFTc,WESTc,YAAL,QFHe;ACYlB,AFEA,AGVG,AFHSb,QAAAA,WAAW,CAACC,IAAZ,CAAkBC,QAAQ,CAACC,gBAAT,CAA2B,4BAA3B,CAAlB,EAA6E;ACYzF,AFEA,ACbgBC,UAAAA,GAAG,EAAE,CADoE;ACazF,AFEA,AGtBgB,AFSAC,UAAAA,KAAK,EAAE,GAFkE;ACczF,AFEA,AGvBgB,AFUAC,UAAAA,WAAW,EAAE;ACY7B,AFEA,AGxBgB,AFOyE,SAA7E,4BEKK;ADWjB,AFEA,AGZG,AFDO;ACYV,AFEA,AGZGT,AFdc,QEcdA,CAAC,CAAEiB,MAAF,CAAD,CAAYC,EAAZ,CAAgB,QAAhB,EAA0B,KAAKC,UAA/B;ADWH,AFEA,AGZG;ADWH,AFEA,AG5BgB,AFAC;AC2BjB,AFEA,AG7BgB,AFAC;AC4BjB,AFEA,AG9BgB,mCAiBD;ADYf,AFEA,AGbG,AFHE,MAAIlB,MEGDD,CAAC,CAAE,AFHN,sBEGI,CAAD,CAA4BoB,MAAjC,EAA0C;ADY7C,AFEA,AGbIpB,AFHF,CAhBD,EAgBKU,MAhBL,CEmBGV,CAAC,CAAE,YAAF,CAAD,CAAkBqB,GAAlB,CAAuB,YAAvB,EAAqCrB,CAAC,CAAE,sBAAF,CAAD,CAA4BsB,WAA5B,KAA4C,IAAjF;ADYJ,AFEA,AGbI;ADYJ,AFEA,AGbG;ADYH,AFEA,AGnCgB;ADkChB,AFEA,AGpCgB;ADmChB,AFEA,AGrCgB,+BAuBL;ADaX,AFEA,AGdG,aAAKH,UAAL,GADQ,CAER;ADYH,AFEA;AEDA,AFEA,AGdG,YAAMI,QAAQ,GAAG,IAAIC,iBAAJ,CAAc,KAAKZ,UAAnB,EAA+B;ADanD,AFEA,AGdIa,UAAAA,MAAM,EAAEzB,CAAC,CAAE,sBAAF,CAAD,CAA4BsB,WAA5B,EADuC;ADcnD,AFEA,AGfuD;ADcvD,AFEA,AGfII,UAAAA,SAAS,EAAE;ADcf,AFEA,AGfKC,YAAAA,EAAE,EAAE,EADM;ADef,AFEA,AGfKC,YAAAA,IAAI,EAAE;ADcX,AFEA,AGlBe,WAFoC;ADmBnD,AFEA,AGfIC,UAAAA,OAAO,EAAG,mBAAW;ADczB,AFEA,AGfK,gBAAMC,YAAY,GAAG9B,CAAC,CAAE,sBAAF,CAAD,CAA4BsB,WAA5B,EAArB;ADcL,AFEA;AEDA,AFEA,AGhBK,gBAAKtB,CAAC,CAAE,sBAAF,CAAD,CAA4BoB,MAAjC,EAA0C;ADe/C,AFEA,AGhBMpB,cAAAA,CAAC,CAAE,sBAAF,CAAD,CAA4BqB,GAA5B,CAAiC,WAAjC,EAA8C,kBAAkBS,YAAlB,GAAiC,MAA/E;ADeN,AFEA,AGhBM;ADeN,AFEA,AGhBK,WAX8C;AD0BnD,AFEA,AGhBIC,UAAAA,KAAK,EAAG,iBAAW;ADevB,AFEA,AGhBK/B,YAAAA,CAAC,CAAE,sBAAF,CAAD,CAA4BqB,GAA5B,CAAiC,WAAjC,EAA8C,EAA9C;ADeL,AFEA,AGhBK;ADeL,AFEA,AG/BmD,SAA/B,CAAjB,CAHQ,CAmBR;ADcH,AFEA;AEDA,AFEA,AGhBGE,QAAAA,QAAQ,CAACnB,IAAT;ADeH,AFEA,AGhBG;ADeH,AFEA,AG7DgB;AD4DhB,AFEA;AEDA,AFEA,AG/DgB;AD8DhB,AFEA,AGhEgB;AD+DhB,AFEA;AEDA,AFEA,AGnBC,MAAIO,MAAJ;ADkBD,AFEA,AGnBC,CAhDD,EAgDKD,MAhDL;ADkfile":"bundle.js","sourceRoot":"","sourcesContent":["'use strict';\r\n\r\nvar classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n};\r\n\r\n/**\r\n * Created by Sergiu È˜andor (micku7zu) on 1/27/2017.\r\n * Original idea: https://github.com/gijsroge/tilt.js\r\n * MIT License.\r\n * Version 1.7.0\r\n */\r\n\r\nvar VanillaTilt = function () {\r\n  function VanillaTilt(element) {\r\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, VanillaTilt);\r\n\r\n    if (!(element instanceof Node)) {\r\n      throw \"Can't initialize VanillaTilt because \" + element + \" is not a Node.\";\r\n    }\r\n\r\n    this.width = null;\r\n    this.height = null;\r\n    this.clientWidth = null;\r\n    this.clientHeight = null;\r\n    this.left = null;\r\n    this.top = null;\r\n\r\n    // for Gyroscope sampling\r\n    this.gammazero = null;\r\n    this.betazero = null;\r\n    this.lastgammazero = null;\r\n    this.lastbetazero = null;\r\n\r\n    this.transitionTimeout = null;\r\n    this.updateCall = null;\r\n    this.event = null;\r\n\r\n    this.updateBind = this.update.bind(this);\r\n    this.resetBind = this.reset.bind(this);\r\n\r\n    this.element = element;\r\n    this.settings = this.extendSettings(settings);\r\n\r\n    this.reverse = this.settings.reverse ? -1 : 1;\r\n    this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\r\n    this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\r\n    this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\r\n    this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\r\n    this.gyroscopeSamples = this.settings.gyroscopeSamples;\r\n\r\n    this.elementListener = this.getElementListener();\r\n\r\n    if (this.glare) {\r\n      this.prepareGlare();\r\n    }\r\n\r\n    if (this.fullPageListening) {\r\n      this.updateClientSize();\r\n    }\r\n\r\n    this.addEventListeners();\r\n    this.updateInitialPosition();\r\n  }\r\n\r\n  VanillaTilt.isSettingTrue = function isSettingTrue(setting) {\r\n    return setting === \"\" || setting === true || setting === 1;\r\n  };\r\n\r\n  /**\r\n   * Method returns element what will be listen mouse events\r\n   * @return {Node}\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.getElementListener = function getElementListener() {\r\n    if (this.fullPageListening) {\r\n      return window.document;\r\n    }\r\n\r\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n      var mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\r\n\r\n      if (mouseEventElement) {\r\n        return mouseEventElement;\r\n      }\r\n    }\r\n\r\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n      return this.settings[\"mouse-event-element\"];\r\n    }\r\n\r\n    return this.element;\r\n  };\r\n\r\n  /**\r\n   * Method set listen methods for this.elementListener\r\n   * @return {Node}\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.addEventListeners = function addEventListeners() {\r\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n    this.onWindowResizeBind = this.onWindowResize.bind(this);\r\n    this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\r\n\r\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n    this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n\r\n    if (this.glare || this.fullPageListening) {\r\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n\r\n    if (this.gyroscope) {\r\n      window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Method remove event listeners from current this.elementListener\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.removeEventListeners = function removeEventListeners() {\r\n    this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n    this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n\r\n    if (this.gyroscope) {\r\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n    }\r\n\r\n    if (this.glare || this.fullPageListening) {\r\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.destroy = function destroy() {\r\n    clearTimeout(this.transitionTimeout);\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    this.removeEventListeners();\r\n    this.element.vanillaTilt = null;\r\n    delete this.element.vanillaTilt;\r\n\r\n    this.element = null;\r\n  };\r\n\r\n  VanillaTilt.prototype.onDeviceOrientation = function onDeviceOrientation(event) {\r\n    if (event.gamma === null || event.beta === null) {\r\n      return;\r\n    }\r\n\r\n    this.updateElementPosition();\r\n\r\n    if (this.gyroscopeSamples > 0) {\r\n      this.lastgammazero = this.gammazero;\r\n      this.lastbetazero = this.betazero;\r\n\r\n      if (this.gammazero === null) {\r\n        this.gammazero = event.gamma;\r\n        this.betazero = event.beta;\r\n      } else {\r\n        this.gammazero = (event.gamma + this.lastgammazero) / 2;\r\n        this.betazero = (event.beta + this.lastbetazero) / 2;\r\n      }\r\n\r\n      this.gyroscopeSamples -= 1;\r\n    }\r\n\r\n    var totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\r\n    var totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\r\n\r\n    var degreesPerPixelX = totalAngleX / this.width;\r\n    var degreesPerPixelY = totalAngleY / this.height;\r\n\r\n    var angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\r\n    var angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\r\n\r\n    var posX = angleX / degreesPerPixelX;\r\n    var posY = angleY / degreesPerPixelY;\r\n\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = {\r\n      clientX: posX + this.left,\r\n      clientY: posY + this.top\r\n    };\r\n\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseEnter = function onMouseEnter() {\r\n    this.updateElementPosition();\r\n    this.element.style.willChange = \"transform\";\r\n    this.setTransition();\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseMove = function onMouseMove(event) {\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = event;\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseLeave = function onMouseLeave() {\r\n    this.setTransition();\r\n\r\n    if (this.settings.reset) {\r\n      requestAnimationFrame(this.resetBind);\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.reset = function reset() {\r\n    this.event = {\r\n      clientX: this.left + this.width / 2,\r\n      clientY: this.top + this.height / 2\r\n    };\r\n\r\n    if (this.element && this.element.style) {\r\n      this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(0deg) \" + \"rotateY(0deg) \" + \"scale3d(1, 1, 1)\";\r\n    }\r\n\r\n    this.resetGlare();\r\n  };\r\n\r\n  VanillaTilt.prototype.resetGlare = function resetGlare() {\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"0\";\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.updateInitialPosition = function updateInitialPosition() {\r\n    if (this.settings.startX === 0 && this.settings.startY === 0) {\r\n      return;\r\n    }\r\n\r\n    this.onMouseEnter();\r\n\r\n    if (this.fullPageListening) {\r\n      this.event = {\r\n        clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\r\n        clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\r\n      };\r\n    } else {\r\n      this.event = {\r\n        clientX: this.left + (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width,\r\n        clientY: this.top + (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height\r\n      };\r\n    }\r\n\r\n    var backupScale = this.settings.scale;\r\n    this.settings.scale = 1;\r\n    this.update();\r\n    this.settings.scale = backupScale;\r\n    this.resetGlare();\r\n  };\r\n\r\n  VanillaTilt.prototype.getValues = function getValues() {\r\n    var x = void 0,\r\n        y = void 0;\r\n\r\n    if (this.fullPageListening) {\r\n      x = this.event.clientX / this.clientWidth;\r\n      y = this.event.clientY / this.clientHeight;\r\n    } else {\r\n      x = (this.event.clientX - this.left) / this.width;\r\n      y = (this.event.clientY - this.top) / this.height;\r\n    }\r\n\r\n    x = Math.min(Math.max(x, 0), 1);\r\n    y = Math.min(Math.max(y, 0), 1);\r\n\r\n    var tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\r\n    var tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\r\n    var angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\r\n\r\n    return {\r\n      tiltX: tiltX,\r\n      tiltY: tiltY,\r\n      percentageX: x * 100,\r\n      percentageY: y * 100,\r\n      angle: angle\r\n    };\r\n  };\r\n\r\n  VanillaTilt.prototype.updateElementPosition = function updateElementPosition() {\r\n    var rect = this.element.getBoundingClientRect();\r\n\r\n    this.width = this.element.offsetWidth;\r\n    this.height = this.element.offsetHeight;\r\n    this.left = rect.left;\r\n    this.top = rect.top;\r\n  };\r\n\r\n  VanillaTilt.prototype.update = function update() {\r\n    var values = this.getValues();\r\n\r\n    this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" + \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" + \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(\" + values.angle + \"deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"\" + values.percentageY * this.settings[\"max-glare\"] / 100;\r\n    }\r\n\r\n    this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n      \"detail\": values\r\n    }));\r\n\r\n    this.updateCall = null;\r\n  };\r\n\r\n  /**\r\n   * Appends the glare element (if glarePrerender equals false)\r\n   * and sets the default style\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.prepareGlare = function prepareGlare() {\r\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n    if (!this.glarePrerender) {\r\n      // Create glare element\r\n      var jsTiltGlare = document.createElement(\"div\");\r\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n\r\n      var jsTiltGlareInner = document.createElement(\"div\");\r\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n\r\n      jsTiltGlare.appendChild(jsTiltGlareInner);\r\n      this.element.appendChild(jsTiltGlare);\r\n    }\r\n\r\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n\r\n    if (this.glarePrerender) {\r\n      return;\r\n    }\r\n\r\n    Object.assign(this.glareElementWrapper.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"0\",\r\n      \"left\": \"0\",\r\n      \"width\": \"100%\",\r\n      \"height\": \"100%\",\r\n      \"overflow\": \"hidden\",\r\n      \"pointer-events\": \"none\"\r\n    });\r\n\r\n    Object.assign(this.glareElement.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"50%\",\r\n      \"left\": \"50%\",\r\n      \"pointer-events\": \"none\",\r\n      \"background-image\": \"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)\",\r\n      \"width\": this.element.offsetWidth * 2 + \"px\",\r\n      \"height\": this.element.offsetWidth * 2 + \"px\",\r\n      \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\r\n      \"transform-origin\": \"0% 0%\",\r\n      \"opacity\": \"0\"\r\n    });\r\n  };\r\n\r\n  VanillaTilt.prototype.updateGlareSize = function updateGlareSize() {\r\n    if (this.glare) {\r\n      Object.assign(this.glareElement.style, {\r\n        \"width\": \"\" + this.element.offsetWidth * 2,\r\n        \"height\": \"\" + this.element.offsetWidth * 2\r\n      });\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.updateClientSize = function updateClientSize() {\r\n    this.clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n\r\n    this.clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n  };\r\n\r\n  VanillaTilt.prototype.onWindowResize = function onWindowResize() {\r\n    this.updateGlareSize();\r\n    this.updateClientSize();\r\n  };\r\n\r\n  VanillaTilt.prototype.setTransition = function setTransition() {\r\n    var _this = this;\r\n\r\n    clearTimeout(this.transitionTimeout);\r\n    this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\r\n    if (this.glare) this.glareElement.style.transition = \"opacity \" + this.settings.speed + \"ms \" + this.settings.easing;\r\n\r\n    this.transitionTimeout = setTimeout(function () {\r\n      _this.element.style.transition = \"\";\r\n      if (_this.glare) {\r\n        _this.glareElement.style.transition = \"\";\r\n      }\r\n    }, this.settings.speed);\r\n  };\r\n\r\n  /**\r\n   * Method return patched settings of instance\r\n   * @param {boolean} settings.reverse - reverse the tilt direction\r\n   * @param {number} settings.max - max tilt rotation (degrees)\r\n   * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\r\n   * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\r\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n   * @param {string} settings.easing - Easing on enter/exit\r\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n   * @param {number} settings.speed - Speed of the enter/exit transition\r\n   * @param {boolean} settings.transition - Set a transition on enter/exit\r\n   * @param {string|null} settings.axis - What axis should be disabled. Can be X or Y\r\n   * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n   * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\r\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n   * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n   * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n   * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.extendSettings = function extendSettings(settings) {\r\n    var defaultSettings = {\r\n      reverse: false,\r\n      max: 15,\r\n      startX: 0,\r\n      startY: 0,\r\n      perspective: 1000,\r\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n      scale: 1,\r\n      speed: 300,\r\n      transition: true,\r\n      axis: null,\r\n      glare: false,\r\n      \"max-glare\": 1,\r\n      \"glare-prerender\": false,\r\n      \"full-page-listening\": false,\r\n      \"mouse-event-element\": null,\r\n      reset: true,\r\n      gyroscope: true,\r\n      gyroscopeMinAngleX: -45,\r\n      gyroscopeMaxAngleX: 45,\r\n      gyroscopeMinAngleY: -45,\r\n      gyroscopeMaxAngleY: 45,\r\n      gyroscopeSamples: 10\r\n    };\r\n\r\n    var newSettings = {};\r\n    for (var property in defaultSettings) {\r\n      if (property in settings) {\r\n        newSettings[property] = settings[property];\r\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n        var attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n        try {\r\n          newSettings[property] = JSON.parse(attribute);\r\n        } catch (e) {\r\n          newSettings[property] = attribute;\r\n        }\r\n      } else {\r\n        newSettings[property] = defaultSettings[property];\r\n      }\r\n    }\r\n\r\n    return newSettings;\r\n  };\r\n\r\n  VanillaTilt.init = function init(elements, settings) {\r\n    if (elements instanceof Node) {\r\n      elements = [elements];\r\n    }\r\n\r\n    if (elements instanceof NodeList) {\r\n      elements = [].slice.call(elements);\r\n    }\r\n\r\n    if (!(elements instanceof Array)) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach(function (element) {\r\n      if (!(\"vanillaTilt\" in element)) {\r\n        element.vanillaTilt = new VanillaTilt(element, settings);\r\n      }\r\n    });\r\n  };\r\n\r\n  return VanillaTilt;\r\n}();\r\n\r\nif (typeof document !== \"undefined\") {\r\n  /* expose the class to window */\r\n  window.VanillaTilt = VanillaTilt;\r\n\r\n  /**\r\n   * Auto load\r\n   */\r\n  VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n}\r\n\r\nmodule.exports = VanillaTilt;\r\n"," /* eslint-disable */\r\n import VanilaTilt from 'vanilla-tilt';\r\n\r\n /**\r\n  * Header Class\r\n  */\r\n ( function( $ ) {\r\n     class Services {\r\n         constructor() {\r\n             this.render();\r\n         }\r\n     \r\n         render() {\r\n            VanillaTilt.init( document.querySelectorAll( '.sc-services-item.style-02' ), {\r\n                max: 5,\r\n                speed: 400,\r\n                perspective: 1000,\r\n            } );\r\n         }\r\n     }\r\n     \r\n     new Services();\r\n } )( jQuery );\r\n ","/*!\n * headroom.js v0.12.0 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2020 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Headroom = factory());\n}(this, function () { 'use strict';\n\n  function isBrowser() {\n    return typeof window !== \"undefined\";\n  }\n\n  /**\n   * Used to detect browser support for adding an event listener with options\n   * Credit: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   */\n  function passiveEventsSupported() {\n    var supported = false;\n\n    try {\n      var options = {\n        // eslint-disable-next-line getter-return\n        get passive() {\n          supported = true;\n        }\n      };\n      window.addEventListener(\"test\", options, options);\n      window.removeEventListener(\"test\", options, options);\n    } catch (err) {\n      supported = false;\n    }\n\n    return supported;\n  }\n\n  function isSupported() {\n    return !!(\n      isBrowser() &&\n      function() {}.bind &&\n      \"classList\" in document.documentElement &&\n      Object.assign &&\n      Object.keys &&\n      requestAnimationFrame\n    );\n  }\n\n  function isDocument(obj) {\n    return obj.nodeType === 9; // Node.DOCUMENT_NODE === 9\n  }\n\n  function isWindow(obj) {\n    // `obj === window` or `obj instanceof Window` is not sufficient,\n    // as the obj may be the window of an iframe.\n    return obj && obj.document && isDocument(obj.document);\n  }\n\n  function windowScroller(win) {\n    var doc = win.document;\n    var body = doc.body;\n    var html = doc.documentElement;\n\n    return {\n      /**\n       * @see http://james.padolsey.com/javascript/get-document-height-cross-browser/\n       * @return {Number} the scroll height of the document in pixels\n       */\n      scrollHeight: function() {\n        return Math.max(\n          body.scrollHeight,\n          html.scrollHeight,\n          body.offsetHeight,\n          html.offsetHeight,\n          body.clientHeight,\n          html.clientHeight\n        );\n      },\n\n      /**\n       * @see http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript\n       * @return {Number} the height of the viewport in pixels\n       */\n      height: function() {\n        return win.innerHeight || html.clientHeight || body.clientHeight;\n      },\n\n      /**\n       * Gets the Y scroll position\n       * @return {Number} pixels the page has scrolled along the Y-axis\n       */\n      scrollY: function() {\n        if (win.pageYOffset !== undefined) {\n          return win.pageYOffset;\n        }\n\n        return (html || body.parentNode || body).scrollTop;\n      }\n    };\n  }\n\n  function elementScroller(element) {\n    return {\n      /**\n       * @return {Number} the scroll height of the element in pixels\n       */\n      scrollHeight: function() {\n        return Math.max(\n          element.scrollHeight,\n          element.offsetHeight,\n          element.clientHeight\n        );\n      },\n\n      /**\n       * @return {Number} the height of the element in pixels\n       */\n      height: function() {\n        return Math.max(element.offsetHeight, element.clientHeight);\n      },\n\n      /**\n       * Gets the Y scroll position\n       * @return {Number} pixels the element has scrolled along the Y-axis\n       */\n      scrollY: function() {\n        return element.scrollTop;\n      }\n    };\n  }\n\n  function createScroller(element) {\n    return isWindow(element) ? windowScroller(element) : elementScroller(element);\n  }\n\n  /**\n   * @param element EventTarget\n   */\n  function trackScroll(element, options, callback) {\n    var isPassiveSupported = passiveEventsSupported();\n    var rafId;\n    var scrolled = false;\n    var scroller = createScroller(element);\n    var lastScrollY = scroller.scrollY();\n    var details = {};\n\n    function update() {\n      var scrollY = Math.round(scroller.scrollY());\n      var height = scroller.height();\n      var scrollHeight = scroller.scrollHeight();\n\n      // reuse object for less memory churn\n      details.scrollY = scrollY;\n      details.lastScrollY = lastScrollY;\n      details.direction = scrollY > lastScrollY ? \"down\" : \"up\";\n      details.distance = Math.abs(scrollY - lastScrollY);\n      details.isOutOfBounds = scrollY < 0 || scrollY + height > scrollHeight;\n      details.top = scrollY <= options.offset[details.direction];\n      details.bottom = scrollY + height >= scrollHeight;\n      details.toleranceExceeded =\n        details.distance > options.tolerance[details.direction];\n\n      callback(details);\n\n      lastScrollY = scrollY;\n      scrolled = false;\n    }\n\n    function handleScroll() {\n      if (!scrolled) {\n        scrolled = true;\n        rafId = requestAnimationFrame(update);\n      }\n    }\n\n    var eventOptions = isPassiveSupported\n      ? { passive: true, capture: false }\n      : false;\n\n    element.addEventListener(\"scroll\", handleScroll, eventOptions);\n    update();\n\n    return {\n      destroy: function() {\n        cancelAnimationFrame(rafId);\n        element.removeEventListener(\"scroll\", handleScroll, eventOptions);\n      }\n    };\n  }\n\n  function normalizeUpDown(t) {\n    return t === Object(t) ? t : { down: t, up: t };\n  }\n\n  /**\n   * UI enhancement for fixed headers.\n   * Hides header when scrolling down\n   * Shows header when scrolling up\n   * @constructor\n   * @param {DOMElement} elem the header element\n   * @param {Object} options options for the widget\n   */\n  function Headroom(elem, options) {\n    options = options || {};\n    Object.assign(this, Headroom.options, options);\n    this.classes = Object.assign({}, Headroom.options.classes, options.classes);\n\n    this.elem = elem;\n    this.tolerance = normalizeUpDown(this.tolerance);\n    this.offset = normalizeUpDown(this.offset);\n    this.initialised = false;\n    this.frozen = false;\n  }\n  Headroom.prototype = {\n    constructor: Headroom,\n\n    /**\n     * Start listening to scrolling\n     * @public\n     */\n    init: function() {\n      if (Headroom.cutsTheMustard && !this.initialised) {\n        this.addClass(\"initial\");\n        this.initialised = true;\n\n        // defer event registration to handle browser\n        // potentially restoring previous scroll position\n        setTimeout(\n          function(self) {\n            self.scrollTracker = trackScroll(\n              self.scroller,\n              { offset: self.offset, tolerance: self.tolerance },\n              self.update.bind(self)\n            );\n          },\n          100,\n          this\n        );\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the widget, clearing up after itself\n     * @public\n     */\n    destroy: function() {\n      this.initialised = false;\n      Object.keys(this.classes).forEach(this.removeClass, this);\n      this.scrollTracker.destroy();\n    },\n\n    /**\n     * Unpin the element\n     * @public\n     */\n    unpin: function() {\n      if (this.hasClass(\"pinned\") || !this.hasClass(\"unpinned\")) {\n        this.addClass(\"unpinned\");\n        this.removeClass(\"pinned\");\n\n        if (this.onUnpin) {\n          this.onUnpin.call(this);\n        }\n      }\n    },\n\n    /**\n     * Pin the element\n     * @public\n     */\n    pin: function() {\n      if (this.hasClass(\"unpinned\")) {\n        this.addClass(\"pinned\");\n        this.removeClass(\"unpinned\");\n\n        if (this.onPin) {\n          this.onPin.call(this);\n        }\n      }\n    },\n\n    /**\n     * Freezes the current state of the widget\n     * @public\n     */\n    freeze: function() {\n      this.frozen = true;\n      this.addClass(\"frozen\");\n    },\n\n    /**\n     * Re-enables the default behaviour of the widget\n     * @public\n     */\n    unfreeze: function() {\n      this.frozen = false;\n      this.removeClass(\"frozen\");\n    },\n\n    top: function() {\n      if (!this.hasClass(\"top\")) {\n        this.addClass(\"top\");\n        this.removeClass(\"notTop\");\n\n        if (this.onTop) {\n          this.onTop.call(this);\n        }\n      }\n    },\n\n    notTop: function() {\n      if (!this.hasClass(\"notTop\")) {\n        this.addClass(\"notTop\");\n        this.removeClass(\"top\");\n\n        if (this.onNotTop) {\n          this.onNotTop.call(this);\n        }\n      }\n    },\n\n    bottom: function() {\n      if (!this.hasClass(\"bottom\")) {\n        this.addClass(\"bottom\");\n        this.removeClass(\"notBottom\");\n\n        if (this.onBottom) {\n          this.onBottom.call(this);\n        }\n      }\n    },\n\n    notBottom: function() {\n      if (!this.hasClass(\"notBottom\")) {\n        this.addClass(\"notBottom\");\n        this.removeClass(\"bottom\");\n\n        if (this.onNotBottom) {\n          this.onNotBottom.call(this);\n        }\n      }\n    },\n\n    shouldUnpin: function(details) {\n      var scrollingDown = details.direction === \"down\";\n\n      return scrollingDown && !details.top && details.toleranceExceeded;\n    },\n\n    shouldPin: function(details) {\n      var scrollingUp = details.direction === \"up\";\n\n      return (scrollingUp && details.toleranceExceeded) || details.top;\n    },\n\n    addClass: function(className) {\n      this.elem.classList.add.apply(\n        this.elem.classList,\n        this.classes[className].split(\" \")\n      );\n    },\n\n    removeClass: function(className) {\n      this.elem.classList.remove.apply(\n        this.elem.classList,\n        this.classes[className].split(\" \")\n      );\n    },\n\n    hasClass: function(className) {\n      return this.classes[className].split(\" \").every(function(cls) {\n        return this.classList.contains(cls);\n      }, this.elem);\n    },\n\n    update: function(details) {\n      if (details.isOutOfBounds) {\n        // Ignore bouncy scrolling in OSX\n        return;\n      }\n\n      if (this.frozen === true) {\n        return;\n      }\n\n      if (details.top) {\n        this.top();\n      } else {\n        this.notTop();\n      }\n\n      if (details.bottom) {\n        this.bottom();\n      } else {\n        this.notBottom();\n      }\n\n      if (this.shouldUnpin(details)) {\n        this.unpin();\n      } else if (this.shouldPin(details)) {\n        this.pin();\n      }\n    }\n  };\n\n  /**\n   * Default options\n   * @type {Object}\n   */\n  Headroom.options = {\n    tolerance: {\n      up: 0,\n      down: 0\n    },\n    offset: 0,\n    scroller: isBrowser() ? window : null,\n    classes: {\n      frozen: \"headroom--frozen\",\n      pinned: \"headroom--pinned\",\n      unpinned: \"headroom--unpinned\",\n      top: \"headroom--top\",\n      notTop: \"headroom--not-top\",\n      bottom: \"headroom--bottom\",\n      notBottom: \"headroom--not-bottom\",\n      initial: \"headroom\"\n    }\n  };\n\n  Headroom.cutsTheMustard = isSupported();\n\n  return Headroom;\n\n}));\n"," /* eslint-disable */\r\nimport Headroom from 'headroom.js';\r\n\r\n/**\r\n * Header Class\r\n */\r\n( function( $ ) {\r\n\tclass Header {\r\n\t\tconstructor() {\r\n\t\t\t// grab an element\r\n\t\t\tthis.navElement = document.querySelector( '.site-header--sticky' );\r\n\t\t\tthis.pageContent = document.querySelector( '.site-main' );\r\n\t\t\tthis.topBar = document.querySelector( '.site-header__topbar' );\r\n\t\r\n\t\t\tthis.render();\r\n\t\t\tthis.resizeHeader();\r\n\t\t}\r\n\t\r\n\t\tresizeHeader() {\r\n\t\t\t// window.addEventListener( 'resize', this.headerSize );\r\n\t\t\t$( window ).on( 'resize', this.headerSize );\r\n\t\t}\r\n\t\r\n\t\theaderSize() {\r\n\t\t\tif ( $( '.site-header--sticky' ).length ) {\r\n\t\t\t\t$( '.site-main' ).css( 'margin-top', $( '.site-header--sticky' ).outerHeight() + 'px' );\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\trender() {\r\n\t\t\tthis.headerSize();\r\n\t\t\t// construct an instance of Headroom, passing the element\r\n\t\t\tconst headroom = new Headroom( this.navElement, {\r\n\t\t\t\toffset: $( '.site-header--sticky' ).outerHeight(), // this.topBar ? this.topBar.offsetHeight : 0,\r\n\t\t\t\ttolerance: {\r\n\t\t\t\t\tup: 10,\r\n\t\t\t\t\tdown: 0\r\n\t\t\t\t},\r\n\t\t\t\tonUnpin : function() {\r\n\t\t\t\t\tconst topBarHeight = $( '.site-header__topbar' ).outerHeight();\r\n\t\t\t\t\tif ( $( '.site-header__topbar' ).length ) {\r\n\t\t\t\t\t\t$( '.site-header--sticky' ).css( 'transform', 'translateY( -' + topBarHeight + 'px )' );\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonPin : function() {\r\n\t\t\t\t\t$( '.site-header--sticky' ).css( 'transform', '' );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t\t// initialise\r\n\t\t\theadroom.init();\r\n\t\t}\r\n\t}\r\n\t\r\n\tnew Header();\r\n} )( jQuery );\r\n","// import '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\n// import '../../node_modules/popper.js/dist/popper';\r\nimport './services';\r\nimport './header';"]}