// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get($columns, $numberColumns) - ( ( $columns__margin * ( $numberColumns - 1 ) ) / $numberColumns );
}

@mixin transit {
	transition: all .3s cubic-bezier(.645, .045, .355, 1);
}

@mixin transit2 {
	transition: all .3s cubic-bezier(.645, .045, .355, 1);
}

@mixin transit3 {
	transition: all .3s cubic-bezier(.645, .045, .355, 1);
}

%transit {
	@include transit();
}

%transit2 {
	@include transit2();
}

%transit3 {
	@include transit3();
}

// The default font size for html is 16px
$base-size: 16;
//Function to convert px value into rem
//You can replace rem with any other value you want (rem is most preferred value for web)
@function size($target, $context: $base-size) {
	@return ($target / $context) * 1em;
}

@each $breakpoint in map-keys($grid-breakpoints) {
	@include media-breakpoint-up($breakpoint) {
		$infix: breakpoint-infix($breakpoint, $grid-breakpoints);
		@each $prop, $abbrev in (width: w, height: h) {
			@each $size, $length in $sizes {
				.#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
			}
		}
	}
}

@include media-breakpoint-down(xs) {
	%btn-mobile {
		font-size: size(18) !important;
		padding: 16px 53px !important;
	}

	%title-sm {
		font-size: 20px !important;
		line-height: 30px;
		margin-top: 0;
	}

	%full-width-sm {
		width: 100vw;
		position: relative;
		margin-left: -50vw;
		left: 50%;
	}
}

%pagination-item {
	@extend %transit3;
	color: $white;
	background-color: $primary;
	width: size(31);
	height: size(31);
	text-align: center;
	line-height: 28px;
	display: block;
	border-radius: 100%;
}

%btn {
	display: inline-block;
	font-family: $btn-font-family;
	font-weight: $btn-font-weight;
	color: $body-color;
	text-align: center;
	text-decoration: if($link-decoration == none, null, none);
	white-space: $btn-white-space;
	vertical-align: middle;
	user-select: none;
	background-color: transparent;
	border: $btn-border-width solid transparent;
	border-radius: 0;
	text-transform: uppercase;
	@include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius);
	@include transition($btn-transition);

	@include hover() {
		color: $body-color;
		text-decoration: none;
	}

	&:focus,
	&.focus {
		outline: 0;
		box-shadow: $btn-focus-box-shadow;
	}

	// Disabled comes first so active can properly restyle
	&.disabled,
	&:disabled {
		opacity: $btn-disabled-opacity;
		@include box-shadow(none);
	}

	&:not(:disabled):not(.disabled) {
		cursor: if($enable-pointer-cursor-for-buttons, pointer, null);

		&:active,
		&.active {
			@include box-shadow($btn-active-box-shadow);

			&:focus {
			@include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
			}
		}
	}
}

%clearfix {
	&::after {
		content: "";
		clear: both;
		display: table;
	}
}

%full-width {
	width: 100vw;
	position: relative;
	margin-left: -50vw;
	left: 50%;
}